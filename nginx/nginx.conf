# ============================================================================
# Nginx Configuration - Risk Monitoring Platform
# Production-ready reverse proxy with security hardening
# ============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ========================================================================
    # Basic Settings
    # ========================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Hide Nginx version
    server_tokens off;

    # ========================================================================
    # Gzip Compression
    # ========================================================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # ========================================================================
    # Rate Limiting Zones
    # ========================================================================
    # Login/Register endpoints: 5 requests per minute
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
    
    # API endpoints: 10 requests per second
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    
    # General endpoints: 100 requests per minute
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # ========================================================================
    # Upstream Backend (Flask Application)
    # ========================================================================
    upstream flask_backend {
        # Flask app running on port 5000
        server flask-app:5000 max_fails=3 fail_timeout=30s;
        
        # For load balancing multiple instances, uncomment:
        # server flask-app-2:5000 max_fails=3 fail_timeout=30s;
        # server flask-app-3:5000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # ========================================================================
    # HTTP Server (Redirect to HTTPS in production)
    # ========================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Health check endpoint (no redirect)
        location /health {
            access_log off;
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # For production with SSL, uncomment to redirect HTTP to HTTPS:
        # return 301 https://$host$request_uri;

        # For development/testing, proxy all requests
        location / {
            # Rate limiting
            limit_req zone=general_limit burst=20 nodelay;
            limit_conn addr 10;

            # Proxy settings
            proxy_pass http://flask_backend;
            proxy_redirect off;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # ====================================================================
        # Authentication Endpoints (Stricter Rate Limiting)
        # ====================================================================
        location ~ ^/(login|register|auth) {
            limit_req zone=auth_limit burst=3 nodelay;
            limit_conn addr 5;

            proxy_pass http://flask_backend;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Additional security headers
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }

        # ====================================================================
        # API Endpoints (API Rate Limiting)
        # ====================================================================
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn addr 10;

            proxy_pass http://flask_backend;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers (if needed)
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            
            # Handle OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # ====================================================================
        # Static Files (Served Directly by Nginx)
        # ====================================================================
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
            
            # Security headers
            add_header X-Content-Type-Options "nosniff" always;
        }

        # ====================================================================
        # Favicon & Robots
        # ====================================================================
        location = /favicon.ico {
            alias /usr/share/nginx/html/static/favicon.ico;
            access_log off;
            log_not_found off;
        }

        location = /robots.txt {
            alias /usr/share/nginx/html/static/robots.txt;
            access_log off;
            log_not_found off;
        }

        # ====================================================================
        # Security: Deny Access to Hidden Files
        # ====================================================================
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # ========================================================================
    # HTTPS Server (Production - Uncomment and configure SSL)
    # ========================================================================
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    # 
    #     # SSL Certificates
    #     ssl_certificate /etc/nginx/ssl/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    # 
    #     # SSL Configuration (Mozilla Intermediate)
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    #     ssl_prefer_server_ciphers off;
    # 
    #     # HSTS (Strict Transport Security)
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    # 
    #     # SSL Session
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_timeout 1d;
    #     ssl_session_tickets off;
    # 
    #     # OCSP Stapling
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     resolver 8.8.8.8 8.8.4.4 valid=300s;
    #     resolver_timeout 5s;
    # 
    #     # Security Headers
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header Referrer-Policy "no-referrer-when-downgrade" always;
    #     add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    # 
    #     # Same location blocks as HTTP server...
    # }
}
